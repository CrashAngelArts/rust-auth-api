use crate::errors::ApiError;
use crate::models::auth::TokenClaims;
use actix_web::{HttpRequest, HttpMessage};

/// Extrai o ID do usu√°rio do token JWT na requisi√ß√£o
pub fn extract_user_id(req: &HttpRequest) -> Result<String, ApiError> {
    // Obter as claims do token JWT das extens√µes da requisi√ß√£o
    let claims = req.extensions().get::<TokenClaims>()
        .cloned()
        .ok_or_else(|| ApiError::AuthenticationError("Usu√°rio n√£o autenticado üîí".to_string()))?;
    
    Ok(claims.sub)
}

/// Verifica se o usu√°rio √© administrador
pub fn is_admin(req: &HttpRequest) -> Result<bool, ApiError> {
    // Obter as claims do token JWT das extens√µes da requisi√ß√£o
    let claims = req.extensions().get::<TokenClaims>()
        .cloned()
        .ok_or_else(|| ApiError::AuthenticationError("Usu√°rio n√£o autenticado üîí".to_string()))?;
    
    Ok(claims.is_admin)
}
